<Window x:Class="IUR_macesond_NET6.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IUR_macesond_NET6"
        xmlns:viewModels="clr-namespace:IUR_macesond_NET6.ViewModels"
        xmlns:converters="clr-namespace:IUR_macesond_NET6.Converters"
        xmlns:userControls="clr-namespace:IUR_macesond_NET6.UserControls"
        xmlns:support="clr-namespace:IUR_macesond_NET6.Support"
        xmlns:validationRules="clr-namespace:IUR_macesond_NET6.ValidationRules" 
        xmlns:placeholdertextboxcustomcontrol="clr-namespace:PlaceholderTextBoxCustomControl;assembly=PlaceholderTextBoxCustomControl"
        mc:Ignorable="d"
        Title="BeProductive!" Height="860" Width="1440"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True">

    <Window.Resources>
        <converters:BooleanNegationConverter x:Key="BooleanNegationConverter"/>
        <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
        <converters:EnumComparisonConverter x:Key="EnumComparisonConverter"/>
        <converters:XPTextConverter x:Key="XPTextConverter"/>
        <converters:LevelConverter x:Key="LevelConverter"/>
        <converters:LanguageEnumToStringConverter x:Key="LanguageEnumToStringConverter"/>
        <converters:NotificationEnumToStringConverter x:Key="NotificationEnumToStringConverter"/>
    </Window.Resources>

    <!--window data context -->
    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <!-- Outer Border -->
    <Border x:Name="ApplicationBorder" CornerRadius="10" BorderThickness="5">
        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="{StaticResource TextColor}" Offset="0"/>
                <GradientStop Color="{StaticResource ForegroundGradientColor1}" Offset="0.5"/>
                <GradientStop Color="{StaticResource BackgroundGradientColor2}" Offset="1"/>
            </LinearGradientBrush>
        </Border.BorderBrush>

        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="{StaticResource TextColor}" Offset="0"/>
                <GradientStop Color="{StaticResource ForegroundGradientColor1}" Offset="0.5"/>
                <GradientStop Color="{StaticResource BackgroundGradientColor2}" Offset="1"/>
            </LinearGradientBrush>
        </Border.Background>

        <!-- Inner Border -->
        <Border x:Name="ApplicationInnerBorder" CornerRadius="10" BorderThickness="5">
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="{StaticResource BackgroundGradientColor1}" Offset="0"/>
                    <GradientStop Color="{StaticResource BackgroundGradientColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Border.BorderBrush>

            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="{StaticResource BackgroundGradientColor1}" Offset="0"/>
                    <GradientStop Color="{StaticResource BackgroundGradientColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>

            <Grid Name="MainGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!-- First column -->
                    <ColumnDefinition Width="*" />
                    <!-- Second column -->
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <!-- First column -->
                    <RowDefinition Height="*" />
                    <!-- Second column -->
                </Grid.RowDefinitions>

                <!-- Left Side of the Grid-->
                <Border Name="LeftGridCollumnBorder" Style="{StaticResource DetailBorderStyleShaded}"
                    Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">

                    <StackPanel Name="LeftMainStackPanel" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                        <!-- First Stack Panel Row = Day selection-->
                        <StackPanel Name="TopStackPanel" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,8,0,0">
                            <Button Name="PrevousDayButton" 
                                    IsEnabled="{Binding IsNotFirstDate}" Command="{Binding PreviousDayCommand, UpdateSourceTrigger=PropertyChanged}"
                                    Content="{Binding LocalizedText.PreviousButton}" Height="40" Width="100" Margin="0,5,5,5" FontSize="18" />

                            <DatePicker Name="DatePicker" SelectedDate="{Binding SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{Binding SelectedDate, Converter={StaticResource DateTimeToStringConverter}}"
                                        DisplayDateStart="{Binding FirstDate, UpdateSourceTrigger=PropertyChanged}"
                                        Width="460" Height="40" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            
                            <Button Name="NextDayButton" Command="{Binding NextDayCommand}"
                                    Content="{Binding LocalizedText.NextButton}" Height="40" Width="100" Margin="5,5,0,5" FontSize="18" />
                        </StackPanel>

                        <StackPanel Name="TaskListStackPanel" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                            <!-- First Stack Panel Row = List Box and scroll viewer -->
                            <StackPanel Name="TaskListInnerHorizontalPanel" Orientation="Horizontal" HorizontalAlignment="Stretch" Height="575">
                                <ListBox Name="TaskListBox" VerticalAlignment="Stretch" Width="674" Margin="8,8,8,0" Height="569" Background="Transparent" BorderBrush="Transparent">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <!-- First TextBlock -->
                                                <TextBlock Text="Task name" VerticalAlignment="Center" Margin="5"/>

                                                <!-- Image -->
                                                <Rectangle Width="50" Height="50" Margin="5"/>

                                                <!-- Second TextBlock -->
                                                <TextBlock Text="20:30" VerticalAlignment="Center" Margin="5"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>

                            <!-- Second Stack Panel Row = Sorting buttons -->
                            <StackPanel Name="SortStackPanel" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,0,0,0">
                                <Label Name="SortLabel" Content="{Binding LocalizedText.SortByLabel}" Height="40" Width="100" Margin="7,5,0,5" VerticalContentAlignment="Center"/>
                                <Button Name="AlphabetSortButton" Content="{Binding LocalizedText.AlphabetButton}" Margin="0,5,5,5"/>
                                <Button Name="DifficultySortButton" Content="{Binding LocalizedText.DifficultyButton}" Margin="5,5,5,5"/>
                                <Button Name="RandomSortButton" Content="{Binding LocalizedText.RandomButton}" Margin="5,5,5,5"/>
                            </StackPanel>
                        </StackPanel>

                        <Border x:Name="XPBorder" Style="{StaticResource ForegroundBorderStyle}" Height="95" Margin="10,30,10,0">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Margin="0,-7,0,0">

                                    <TextBlock x:Name="LevelTextBlock" HorizontalAlignment="Center" VerticalAlignment="Stretch" 
                                           FontSize="22" Foreground="{StaticResource DarkerTextColorBrush}" Margin="12,20,195,0" FontWeight="Bold">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource LevelConverter}">
                                                <Binding Path="CurrentLevel"/>
                                                <Binding Path="LocalizedText.LevelLabel"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock x:Name="EXPTextBlock" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="22" Foreground="{StaticResource DarkerTextColorBrush}" Margin="0,20,0,0" FontWeight="Bold">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource XPTextConverter}">
                                                <Binding Path="CurrentXP"/>
                                                <Binding Path="NextLevelXP"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                </StackPanel>

                                <ProgressBar x:Name="EXPProgressBar" Style="{StaticResource RoundProgressBarStyle}"
                                             Height="25" Width="630" Margin="10, 4, 10, 20" Value="{Binding CurrentXP}"
                                             Maximum="{Binding NextLevelXP}"/>
                            </StackPanel>
                        </Border>

                    </StackPanel>
                </Border>

                <!-- Right Side of the Grid-->
                <!-- Tab Control for task library, productivity analysis and application settings -->

                <Border Name="TabSelectionBorder" Style="{StaticResource DetailBorderStyleShaded}"
                    Grid.Column="1" Grid.Row="0">

                    <TabControl Name="MainTabControl" Style="{StaticResource TabControlStyle}">

                        <TabItem Header="{Binding LocalizedText.TaskLibraryButton}" Style="{StaticResource TabItemStyle}">
                            <Border Name="TabSelectionBorder1" Style="{StaticResource DetailBorderStyle}">
                                <Grid/>
                            </Border>
                        </TabItem>
                        <TabItem Header="{Binding LocalizedText.ProductivityButton}" Style="{StaticResource TabItemStyle}">
                            <Border Name="TabSelectionBorder2" Style="{StaticResource DetailBorderStyle}">
                                <Grid/>
                            </Border>
                        </TabItem>

                        <!-- Settings Menu -->
                        <TabItem Header="{Binding LocalizedText.SettingsButton}" Style="{StaticResource TabItemStyle}">
                            <Border Name="TabSelectionBorder3" Style="{StaticResource DetailBorderStyle}">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="115*"/>
                                        <ColumnDefinition Width="173*"/>
                                        <ColumnDefinition Width="71*"/>
                                        <ColumnDefinition Width="295*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Simplified mode -->
                                    <Label Name="SimplifiedModeLabel" Content="{Binding LocalizedText.LanguageLabel, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Margin="59,0,0,0" FontWeight="Normal" Width="231" Grid.ColumnSpan="2"/>

                                    <CheckBox Name="SimplifiedModeCheckBox"
                                            Grid.Column="3" Margin="0,0,0,0"
                                            IsChecked="{Binding UserSettings.SimplifiedMode, Mode=TwoWay}" Width="30"/>


                                    <!-- Productive part of the day start -->
                                    <Label Name="ProductiveStartLabel" Content="{Binding LocalizedText.ProductivePartOfTheDayStartLabel}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"
                                            Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" FontWeight="Normal" Width="290"/>

                                    <userControls:TimeInput x:Name="ProductiveDayStartTimeInput"
                                            Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Margin="72,0,0,0"
                                            Hour="{Binding UserSettings.ProductivityStartTimeStringHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Minute="{Binding UserSettings.ProductivityStartTimeStringMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <!-- Productive part of the day end -->
                                    <Label Name="ProductiveEndLabel" Content="{Binding LocalizedText.ProductivePartOfTheDayEndLabel}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"
                                            Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" FontWeight="Normal" Width="290"/>

                                    <userControls:TimeInput x:Name="ProductiveDayEndTimeInput"
                                            Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2" Margin="72,0,0,0"
                                            Hour="{Binding UserSettings.ProductivityEndTimeStringHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Minute="{Binding UserSettings.ProductivityEndTimeStringMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <!-- Language -->
                                    <Label Name="LanguageLabel" Content="{Binding LocalizedText.LanguageLabel}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"
                                            Grid.Column="1" Grid.Row="3" FontWeight="Normal" Width="174"/>

                                    <ComboBox Name="LanguageComboBox" Grid.Column="3" Grid.Row="3"
                                            VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Normal" VerticalContentAlignment="Center"
                                            SelectedValue="{Binding UserSettings.CurrentLanguage, Mode=TwoWay, Converter={StaticResource LanguageEnumToStringConverter}}"
                                            ItemsSource ="{Binding UserSettings.LanguageComboBoxCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </ComboBox>

                                    <!-- Notification type -->
                                    <Label Name="NotificationTypeLabel" Content="{Binding LocalizedText.NotificationTypeLabel}" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Grid.Row="4" FontWeight="Normal" Width="290" Grid.ColumnSpan="2"/>

                                    <ComboBox Name="NotificationComboBox" FontSize="18" Grid.Column="3" Grid.Row="4" 
                                            VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Normal"
                                            SelectedValue="{Binding UserSettings.CurrentNotificationType, Mode=TwoWay, Converter={StaticResource NotificationEnumToStringConverter}}"
                                            ItemsSource ="{Binding UserSettings.NotificationComboBoxCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </ComboBox>
                                </Grid>
                            </Border>
                        </TabItem>
                    </TabControl>
                </Border>


                <!-- Task Editor -->
                <Border x:Name="TaskEditorBorder" Style="{StaticResource DetailBorderStyleShaded}"
                    Grid.Column="1" Grid.Row="1">

                    <Grid Height="396" Width="690" HorizontalAlignment="Stretch">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="19*"/>
                            <RowDefinition Height="12*"/>
                            <RowDefinition Height="20.842"/>
                            <RowDefinition Height="19*"/>
                            <RowDefinition Height="19*"/>
                            <RowDefinition Height="19*"/>
                            <RowDefinition Height="19*"/>
                            <RowDefinition Height="19*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="304*"/>
                            <ColumnDefinition Width="36*"/>
                            <ColumnDefinition Width="37*"/>
                            <ColumnDefinition Width="104*"/>
                            <ColumnDefinition Width="104*"/>
                            <ColumnDefinition Width="104*"/>
                        </Grid.ColumnDefinitions>

                        <!-- First row: Task editor Label and save and reset buttons -->
                        <Border x:Name="TaskEditorLabelBorder" Style="{StaticResource ForegroundBorderStyle}" Padding="0" Margin="5,0,5,0" VerticalAlignment="Center" Height="50" HorizontalAlignment="Stretch">
                            <Label x:Name="TaskEditorLabel" Content="{Binding LocalizedText.TaskEditorTitle}" Margin="0" 
                                VerticalContentAlignment="Center" FontSize="24" Foreground="White"
                                Grid.Column="0" Grid.Row="0" FontWeight="Bold"/>
                        </Border>

                        <Button x:Name="SaveTaskButton" Content="{Binding LocalizedText.SaveButton}" Width="80" Command="{Binding CompleteTaskCommand}"
                                Grid.Column="3" Grid.Row="0" HorizontalAlignment="Left" Margin="0,3,0,3" Grid.ColumnSpan="2"/>
                        <Button x:Name="ResetTaskButton" Content="{Binding LocalizedText.ResetButton}" Width="80" IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                Grid.Column="4" Grid.Row="0" HorizontalAlignment="Left" Margin="0,3,0,3" Command="{Binding ResetSelectedTaskCommand}"/>

                        <!-- Second row: Task Name -->
                        <Label Name="TaskNameLabel" Content="{Binding LocalizedText.TaskEditorNameLabel}" Width="251" VerticalContentAlignment="Center"
                                Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" HorizontalContentAlignment="Right" Grid.RowSpan="2" Margin="53,0,0,0"/>

                        <placeholdertextboxcustomcontrol:PlaceholderTextBoxCustomControl
                                 x:Name="TaskNameTextBox"
                                 Width="287"
                                 Height="40" 
                                 Padding="5"
                                 FontSize="16"
                                 IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                 Placeholder="{Binding LocalizedText.TaskEditorPlaceholderName}"
                                 Foreground="{StaticResource DarkerTextColorBrush}"
                                 Text="{Binding SelectedTask.TaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalContentAlignment="Center"
                                 MaxLength="35"
                                 Grid.Column="3" Grid.ColumnSpan="3" Grid.Row="1" HorizontalAlignment="Left" Grid.RowSpan="2"/>

                        <!-- Third row: Task Difficulty  -->
                        <Label Name="TaskDifficultyLabel" Content="{Binding LocalizedText.TaskEditorDifficultyLabel}" Width="251"
                                Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="53,0,0,0"/>

                        <RadioButton Name="SetMediumDifficultyRB"
                                     IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                     IsChecked="{Binding SelectedTask.TaskDifficulty, Converter={StaticResource EnumComparisonConverter}, ConverterParameter={x:Static viewModels:Difficulty.Easy}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Style="{StaticResource RoundRadioButtonStyle}" Foreground="{StaticResource EasyColorBrush}"
                                Grid.Column="3" Grid.Row="3" Margin="0,0,0,0" Grid.ColumnSpan="2"/>

                        <RadioButton Name="SetEasyDifficultyRB"
                                     IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                     IsChecked="{Binding SelectedTask.TaskDifficulty, Converter={StaticResource EnumComparisonConverter}, ConverterParameter={x:Static viewModels:Difficulty.Medium}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Style="{StaticResource RoundRadioButtonStyle}" Foreground="{StaticResource MediumColorBrush}"
                                Grid.Column="4" Grid.Row="3" Margin="-50,0,0,0" Grid.ColumnSpan="2"/>

                        <RadioButton Name="SetHardDifficultyRB" 
                                     IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                     IsChecked="{Binding SelectedTask.TaskDifficulty, Converter={StaticResource EnumComparisonConverter}, ConverterParameter={x:Static viewModels:Difficulty.Hard}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Style="{StaticResource RoundRadioButtonStyle}" Foreground="{StaticResource HardColorBrush}"
                                Grid.Column="5" Grid.Row="3" Margin="-100,0,0,0" Grid.ColumnSpan="2"/>

                        <!-- Third row: Task Timers  -->
                        <Label Name="TaskNotificationLabel" Content="{Binding LocalizedText.TaskEditorNotificationTimesLabel}" Width="270" VerticalContentAlignment="Center"
                                Grid.Column="0" Grid.Row="4" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="34,0,0,0"/>

                        <userControls:TimeInput x:Name="TaskNotificationtTimeInput1"
                                            Grid.Column="3" Grid.Row="4"
                                            IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                            Hour="{Binding SelectedTask.NotificationTime1StringHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Minute="{Binding SelectedTask.NotificationTime1StringMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <userControls:TimeInput x:Name="TaskNotificationtTimeInput2"
                                            Grid.Column="4" Grid.Row="4"
                                            IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                            Hour="{Binding SelectedTask.NotificationTime2StringHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Minute="{Binding SelectedTask.NotificiationTime2StringMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <userControls:TimeInput x:Name="TaskNotificationtTimeInput3"
                                            Grid.Column="5" Grid.Row="4"
                                            IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                            Hour="{Binding SelectedTask.NotificationTime3StringHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Minute="{Binding SelectedTask.NotificationTime3StringMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <!-- Fourth Row: Task Note -->
                        <Label Name="TaskNoteLabel" Content="{Binding LocalizedText.TaskEditorNoteLabel}" Height="40" Width="304" VerticalContentAlignment="Center" 
                                   Grid.Row="5" HorizontalAlignment="Center" HorizontalContentAlignment="Right" Margin="0,9,0,8"/>


                        <placeholdertextboxcustomcontrol:PlaceholderTextBoxCustomControl
                                 x:Name="NoteTExt"
                                 IsEnabled="{Binding SelectedTask.Completed, Converter={StaticResource BooleanNegationConverter}}"
                                 Padding="5"
                                 FontSize="16"
                                 Placeholder="{Binding LocalizedText.TaskEditorPlaceholderNote}"
                                 Foreground="{StaticResource DarkerTextColorBrush}"
                                 Text="{Binding SelectedTask.TaskNote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalContentAlignment="Top"
                                 MaxLength="35"
                                 Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="0,10,25,20"/>
                    </Grid>

                </Border>
            </Grid>
        </Border>
    </Border>
</Window>
